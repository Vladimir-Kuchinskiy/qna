.blog-post.border-bottom data-answer="#{answer.id}"
  .row
    .col-md-8
      h4.d-index.answer-votes
        .badge.badge-primary.font-weight-normal
          | Rating
          span.badge.badge-light.font-weight-normal = answer.votes_count
      - if answer.the_best?
        p -- The Best --
      p.blog-post-meta = answer.created_at.try(:strftime, '%B %d, %Y') + ' by ' + answer.user.try(:email)
      p #{answer.body}
      - if answer.attachments.files?
        h5 Attachments:
        - answer.attachments.each do |a|
          p data-attachment="#{a.id}"
            = link_to a.file.identifier, a.file.url, target: '_blank', class: 'd-index'
            - if can?(:destroy, answer)
              = link_to 'Delete file', a, class: 'd-index btn btn-danger btn-sm', method: :delete, data: {confirm: 'Are you sure?'}, remote: true
    .col-md-4
      - if !answer.the_best? && can?(:update, answer.question)
        = link_to 'Make The Best', pick_up_the_best_answer_path(answer), id: "the-best-link-#{answer.id}", class: 'btn d-inline btn-outline-info', method: :patch, remote: true
      - if can?(:update, answer)
        = link_to 'Edit Answer', '', class: 'edit_answer_link d-inline btn btn-outline-success', data: { answer_id: answer.id }
      - if can?(:destroy, answer)
        = link_to 'Delete', answer, method: :delete, class: 'btn d-inline btn-outline-danger', remote: true, data: {confirm: 'Are you sure?'}
      - if can?(:update, answer)
        p = render 'answers/edit_form', answer: answer
      - elsif current_user&.can_vote?(answer)
        = link_to 'Like', vote_answer_path(id: answer.id, vote: 1), method: :patch, remote: true, class: 'btn btn-success d-inline'
        = link_to 'Dislike', vote_answer_path(id: answer.id, vote: -1), method: :patch, remote: true, class: 'btn btn-danger d-inline'
      - elsif current_user&.can_dismiss?(answer)
        = link_to 'Dismiss vote', dismiss_vote_answer_path(answer), method: :patch, remote: true, class: 'btn btn-outline-danger d-inline'
  .row
    .col-md-6
      .comments-for-answer data-answer-comments-id="#{answer.id}"
        - answer.comments.each do |comment|
          = render 'comments/comment', comment: comment
      - if can?(:create, Comment)
        .border-bottom
        p = link_to 'add comment', '', class: 'badge badge-light add-comment', data: { commentable_id: answer.id }
        = render 'answers/comment_form', answer: answer
